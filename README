The purpose of this program is to compare prior performances of the S&P 500 to the most recent performance (that the spreadsheet has data for) and display
the most similar previous performances, as well as how they did on the days after in order to make a prediction on how the market will move in the future.
To calculate the similarity between recent and prior performances, I created an algorithm that splits each day of the stock market up into five intervals,
those being from (in EST) 9:30 AM - 10:48 AM, 10:49 AM - 12:06 PM, 12:07 PM - 1:24 PM, 1:25 PM - 2:42 PM, and 2:42 PM - 4:00 PM, and assigning a polynomial function
of best fit to each interval, effectively creating a piecewise function for each day of the market that describes a good estimate on how it performed. Then, the algorithm
calculates the area between the prior day curves and the most recent day curves using the polynomials of best fit assigned to each day by doing an integral over each interval 
and comparing it to the most recent curves' area, and then sorts the days based on how small the area between the curves are, the smaller the area between the curves, the more
similar the curves are, and therefore the more similar the performances are. Then, using this information, I created a GUI that displays all the information of the most similar
performances compared to the most recent one, and show how the similar performances did the following day (or three days) to see if there is a trend. This program uses Tkinter 
to display the GUI, NumPy to hold graphing data in arrays, MatPlotLib to graph all of the data, and SciPy to integrate.
